{"version":3,"sources":["Component/Card.js","Component/CardList.js","Component/SearchBox.js","Component/Scroll.js","Component/ErrorBoundry.js","Container/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","email","name","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","includes","length","seachChange","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAkBeA,MAff,SAAcC,GAAQ,IACXC,EAAmBD,EAAnBC,GAAIC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,KAClB,OACI,sBAAKC,UAAY,gDAAjB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BL,KAChD,6BAAKE,IACL,kCAAKD,EAAL,WCgBGK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdE,KAAMK,EAAOG,GAAGR,KAChBD,MAAOM,EAAOG,GAAGT,OAHZS,SCMVC,EAhBG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,OAAf,SACI,uBACAA,UAAU,wBACVU,KAAO,SACPC,YAAc,eACdC,SAAWH,OCERI,EATA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAAEC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAApE,SACKrB,EAAMsB,YCkBJC,E,kDAnBZ,WAAYvB,GAAQ,IAAD,8BAClB,cAAMA,IACDwB,MAAQ,CACTC,UAAU,GAHI,E,8DAODC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACJ,0CAEJG,KAAK5B,MAAMsB,a,GAhBKQ,aCmDZC,G,wDA9CX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GAClB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAdtC,EAAKZ,MAAQ,CACThB,OAAQ,GACR0B,YAAa,IAJP,E,gEAQO,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKZ,SAAS,CAAErB,OAAQiC,S,+BASlC,IAAD,EAC2Bb,KAAKJ,MAA7BU,EADH,EACGA,YAAa1B,EADhB,EACgBA,OACfkC,EAAiBlC,EAAOmC,QAAO,SAAAC,GACrC,OAAOA,EAAMzC,KAAK0C,SAASX,MAE3B,OAAsB,IAAlB1B,EAAOsC,OACA,yCAGP,sBAAK1C,UAAU,MAAf,UACI,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAW2C,YAAanB,KAAKI,iBAC7B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQkC,e,GAnCxBZ,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.40866c90.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Card(props) {\r\n    const {id, email, name} = props;\r\n    return(\r\n        <div className = 'bg-light-pink dib pa2 ma2 tc f7 grow shadow-5'>\r\n            <img alt='robots' src= {`https://robohash.org/${id}`} /> \r\n            <h2>{name}</h2>\r\n            <p> {email} </p>\r\n        </div>\r\n\r\n        )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            robots.map((user,i) => {\r\n                return (\r\n                    <Card\r\n                    key={i}\r\n                    id={robots[i].id}\r\n                    name={robots[i].name}\r\n                    email={robots[i].email}\r\n                    />\r\n                    )\r\n                \r\n            })\r\n        }\r\n        </div>\r\n        );    \r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2 '>\r\n            <input\r\n            className='bg-light-green pa3 ba' \r\n            type = 'search' \r\n            placeholder = 'Search robot' \r\n            onChange={ searchChange }\r\n            />\r\n        </div>\r\n        );   \r\n}\r\n \r\n\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border:'1px solid black', height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        hasError: false\r\n    }\r\n\r\n   }\r\n   componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n   }\r\n\r\n   render() {\r\n    if (this.state.hasError) {\r\n        return <h1> Opppps </h1>\r\n    }\r\n    return this.props.children\r\n   }\r\n};\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react'; \r\nimport CardList from '../Component/CardList';\r\nimport SearchBox from '../Component/SearchBox';\r\nimport Scroll from '../Component/Scroll';\r\nimport ErrorBoundry from '../Component/ErrorBoundry'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => {this.setState({ robots: users })})\r\n    }\r\n        \r\n\r\n    onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n   \r\n    }\r\n\r\n    render() {\r\n        const { searchfield, robots } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n        return robot.name.includes(searchfield);\r\n      })       \r\n        if (robots.length === 0) {\r\n            return <h1>Loading</h1>\r\n        } else {\r\n           return(\r\n            <div className='tc '>\r\n                <h1 className='f1'>Robot Friends</h1>\r\n                <SearchBox seachChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n            ); \r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Container/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}